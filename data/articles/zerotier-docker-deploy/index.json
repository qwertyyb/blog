{"title":"ZeroTier Docker 部署指南","content":"{\"type\":\"doc\",\"content\":[{\"type\":\"toc\"},{\"type\":\"heading\",\"attrs\":{\"level\":2,\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"背景\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"缘起于最近添置了一台小主机，就想部署一个 ZeroTier 以在外网也能访问家里的网络。首选的部署方案当然是 Docker，更优秀的是 ZeroTier 官方也有提供 Docker 镜像，所以我本以为会简单，按照官方的步骤来就可以了，然而事情并不顺利。\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"首先明确下需求是在外网环境下能通过这台部署了 ZeroTier 的机器访问所有的内网设备，而不仅仅只是访问部署了 ZeroTier 的设备。\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"}},{\"type\":\"heading\",\"attrs\":{\"level\":2,\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"基础安装\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"首先是根据 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"href\":\"https://hub.docker.com/r/zerotier/zerotier\"}}],\"text\":\"官方 Docker 的安装指南\"},{\"type\":\"text\",\"text\":\" ,运行如下的命令运行 ZeroTier 容器。\"}]},{\"type\":\"code_block\",\"attrs\":{\"language\":\"Shell\"},\"content\":[{\"type\":\"text\",\"text\":\"docker run --name myzerotier --rm --cap-add NET_ADMIN --device /dev/net/tun zerotier/zerotier:latest abcdefdeadbeef00\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"需要注意的有以下几点：\"}]},{\"type\":\"ordered_list\",\"attrs\":{\"order\":1},\"content\":[{\"type\":\"list_item\",\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"命令行中最后的是 ZeroTier 的网络 ID，需要根据实际情况修改\"}]}]},{\"type\":\"list_item\",\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"在 ZeroTier 官方网站的 Docker 安装中有写，还需要添加 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"—cap-add SYS_ADMIN\"},{\"type\":\"text\",\"text\":\" 参数，所以如果上面的命令不能正常的运行，可以添加这个参数试试。\"}]}]},{\"type\":\"list_item\",\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"可以添加 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"—network host\"},{\"type\":\"text\",\"text\":\" 直接共享主机网络。\"}]}]}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"运行上面的命令后，需要去到 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"href\":\"https://my.zerotier.com/\"}}],\"text\":\"ZeroTier 的管理台\"},{\"type\":\"text\",\"text\":\"，在对应的网络管理台中，就可以看到对应的设备了。给对应的设备授权后，就会分配 IP 了。\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"假设这个网络的 IP 段是 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"10.147.20.*\"},{\"type\":\"text\",\"text\":\", 新添加的设备 B 的家庭内网 IP 是 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"192.168.1.30\"},{\"type\":\"text\",\"text\":\" 在 ZeroTier 上分配的 IP 是 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"10.147.20.100\"},{\"type\":\"text\",\"text\":\"，在此已经有另外一台设备 A 已经接入了这个网络，那么设备 A 在外网就可以通过 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"10.147.20.100\"},{\"type\":\"text\",\"text\":\" 访问到这台内网的设备 B 上的服务了。接下来，需要在管理台再配置一个路由，让内外网能通过同一个家庭内网 IP 访问，在 ZeroTier 管理的 Advance 部分添加路由，Destination 填写家庭内网 IP 网段（在这个示例中是 192.168.1.0/24），Via 填写在 ZeroTier 上分配的 IP（在这个示例中是 10.147.20.100），如下图：\"}]},{\"type\":\"image\",\"attrs\":{\"src\":\"data/articles/new/files/1728477941042-Snipaste_2024-10-09_20-45-32.png\",\"ratio\":\"1376/194\",\"size\":null,\"align\":null,\"href\":null},\"content\":[{\"type\":\"plain_text\",\"content\":[{\"type\":\"text\",\"text\":\"Add Routes\"}]}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"}},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"这样内外网就可以无缝切换了，在内网环境下，直接使用内网路由器的 IP 段 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"192.168.1.30\"},{\"type\":\"text\",\"text\":\" 来访问这台设备，在外网环境下，打开 ZeroTier 应用后，仍然能通过 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"192.168.1.30\"},{\"type\":\"text\",\"text\":\"访问内网设备。\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":2,\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"问题及解决方案\"}]},{\"type\":\"ordered_list\",\"attrs\":{\"order\":1},\"content\":[{\"type\":\"list_item\",\"content\":[{\"type\":\"heading\",\"attrs\":{\"level\":3,\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"Docker 重启 Mac 会变\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"按官方的命令创建并启动容器，然而容器每次重启后，都需要在 ZeroTier 管理台重新授权，然后生成新的网段 IP。而之所以会这样，直接原因是因为 Mac 地址变化了，所以管理台就会认为是一个新的设备，也就需要重新授权了。\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"刚开始我走错了路，我以为这里的 Mac 地址是容器的 Mac 地址，所以一直在找如何固定容器的 Mac 地址，让 Mac 地址在重启或重建后保持一致。于是我参考了 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"href\":\"https://docs.docker.com/reference/compose-file/\"}}],\"text\":\"Docker Compsoe 的文档\"},{\"type\":\"text\",\"text\":\" ，在这个文档中，我找到了 mac_address 字段，但是可惜的是它不生效，官方文档也有补充说明，在 Docker 版本大于等于 2.24.0 且低于 2.25.0 时才会生效。\"}]},{\"type\":\"code_block\",\"attrs\":{\"language\":\"YAML\"},\"content\":[{\"type\":\"text\",\"text\":\"version: '3.8' # Example version\\nservices:\\n  your_service:\\n    image: your_image\\n    mac_address: your_mac_address\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"}},{\"type\":\"blockquote\",\"content\":[{\"type\":\"heading\",\"attrs\":{\"level\":3,\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"mac_address\"}]},{\"type\":\"blockquote\",\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"Available with Docker Compose version 2.24.0 and later.\"}]}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"mac_address\"},{\"type\":\"text\",\"text\":\" sets a MAC address for the service container.\"}]},{\"type\":\"blockquote\",\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"strong\"}],\"text\":\"Note\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"Container runtimes might reject this value (ie. Docker Engine >= v25.0). In that case, you should use \"},{\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"href\":\"https://docs.docker.com/reference/compose-file/services/#mac_address\"}}],\"text\":\"networks.mac_address\"},{\"type\":\"text\",\"text\":\" instead.\"}]}]}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"推荐使用的是 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"networks.mac_address\"},{\"type\":\"text\",\"text\":\"，于是我使用了 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"networks.mac_address\"},{\"type\":\"text\",\"text\":\"，如下所示例，这样一来，容器本身的 Mac 地址是固定了，但是每次重建容器时 ZeroTier 的 Mac 仍然产生了变化，需要重新授权。直到这时，我才意识到思路出现了问题。\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"重新梳理后发现了原因，ZeroTier 会生成一个虚拟网卡，管理台上显示的实际是 ZeroTier 生成的虚拟网卡的 Mac 地址，也就是说容器的 Mac 地址和 ZeroTier 使用的 Mac 地址不是同一个。那如何固定 ZeroTier 生成的虚拟网上的 Mac 地址呢？ZeroTier 会在初始化时，初始化这个 Mac 地址，然后写入配置中，再次启动时，就会读取配置，使用配置中的 Mac 地址，这样一来，Mac 地址就固定了。容器中 ZeroTier 的配置路径为 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"/var/lib/zerotier-one\"},{\"type\":\"text\",\"text\":\"，可以使用 Docker 的 Volume 把配置路径挂载到主机路径上，这样一来容器即使重建 Mac 地址也不会变化了，也就无须再重新授权了。\"}]}]},{\"type\":\"list_item\",\"content\":[{\"type\":\"heading\",\"attrs\":{\"level\":3,\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"无法访问内网其它设备\"}]}]}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"}},{\"type\":\"heading\",\"attrs\":{\"level\":2,\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"关于 iptables\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"}},{\"type\":\"heading\",\"attrs\":{\"level\":2,\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"总结\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"}}]}","createdAt":"2024-10-07T14:04:40.372Z","updatedAt":"2024-10-09T12:47:35.594Z"}