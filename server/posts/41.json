{"id":41,"title":"pkgbuild 踩坑表演","content":"{\"type\":\"doc\",\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"今天偶然发现开发的 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"href\":\"https://github.com/qwertyyb/Fire\"}}],\"text\":\"业火输入法\"},{\"type\":\"text\",\"text\":\" 竟然有一个天大的问题，不知道从哪个版本开始，如果用户是首次安装，那么必定会安装失败，记录一下解决问题的过程\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"缘起于发现开发的输入法在某台机器上总是越用越卡，终于腾出时间打算排查一下（关于这里具体的原因后面再说），然后就在尝试删除重新安装的过程中发现了这个问题。说一下我的操作步骤，首先删除了原目录 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"/Library/Input Methods\"},{\"type\":\"text\",\"text\":\" 下的文件，然后下载了最新版的 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"installer.pkg\"},{\"type\":\"text\",\"text\":\" 文件，运行安装程序，安装过程中也没有什么报错。但是在安装完成后，并没有自动启动此输入法，在系统设置 -> 键盘设置中也无法找到此输入法，就好像完全没安装上一样。\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"排查后发现安装后 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"/Library/Input Methods\"},{\"type\":\"text\",\"text\":\" 目录下并没有输入法应用，这就很不合理了，因为我很确定，这个版本是可以正常安装升级的，我的另一台设备就是通过同一个安装文件以重新安装的方式升级到这个最新版本，所以不应该出现问题才对。\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"刚开始我以为是 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"installer.pkg\"},{\"type\":\"text\",\"text\":\" 文件中的 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"postinstall\"},{\"type\":\"text\",\"text\":\" 脚本有问题，这个脚本中会先通过 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"pkill\"},{\"type\":\"text\",\"text\":\" 进程名的方式停掉旧版本的进程，但是并没有提前判断这个进程是否存在，新安装的设备中因为不存在这个进程所以这个命令必然会失败，所以我首先猜测的就是这个脚本有问题。然而很遗憾的是，经过验证，并不是这个问题的原因，事后在复盘这里时，觉得也确实不太可能是这里的问题，因为 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"postinstall\"},{\"type\":\"text\",\"text\":\" 是应用安装后执行的脚本，脚本中也并没有删除文件夹中应用的逻辑，所以问题不大可能出现在这里。\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"上面的方式尝试后没有结果，于是尝试以更新的方式重新安装了一下，具体操作步骤是，先往 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"/Library/Input Methods\"},{\"type\":\"text\",\"text\":\" 丢一个旧版本的 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\".app\"},{\"type\":\"text\",\"text\":\" 应用文件，再重新运行 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"installer.pkg\"},{\"type\":\"text\",\"text\":\"。神奇的是，从 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\".app\"},{\"type\":\"text\",\"text\":\" 文件的创建时间来分析，竟然安装成功了，旧版本成功被替换成了新版本，神奇吧。\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"无奈之下，啃了一下 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"pkgbuild\"},{\"type\":\"text\",\"text\":\" 的使用说明，发现最有可能的原因是在构建的命令中缺少了 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"--component-plist ${plist file}\"},{\"type\":\"text\",\"text\":\" 这个选项导致的，于是我翻了翻 git 的提交历史，重新把 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"component.plist\"},{\"type\":\"text\",\"text\":\" 这个文件给找了出来（是的，在最初的构建脚本中，是有这个文件的，后面迭代过程中删除了），然后修改 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"pkgbuild\"},{\"type\":\"text\",\"text\":\" 构建的命令，你猜怎么着，竟然可以了，真是让人苦笑不得。\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"深入分析原因，猜测可能与 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"component.plist\"},{\"type\":\"text\",\"text\":\" 中定义的更新策略类似，\"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"component.plist\"},{\"type\":\"text\",\"text\":\" 文件中有定义两个更新策略，一个是 upgrade，即全新安装，完全替换掉旧的 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\".app\"},{\"type\":\"text\",\"text\":\" 文件，另一个是 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"update\"},{\"type\":\"text\",\"text\":\"，仅更新 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\".app\"},{\"type\":\"text\",\"text\":\" 中有变化的文件，仅用于升级安装的场景，全新安装时，不会安装这些文件。所以据此猜测，可能是在没有指定 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"component.plist\"},{\"type\":\"text\",\"text\":\" 文件时，采用的默认策略类似于 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"update\"},{\"type\":\"text\",\"text\":\" ，所以在全新安装时不会安装。\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"这里让人吐血的是，刚开始的构建脚本是正常的，后面重新修改了构建脚本，但是却没有测过全新安装的场景，导致问题存在了好久，后续还是要小心注意这些修改。\"}]}]}","path":"/1/12","nextId":null,"createdAt":"2024-09-17T07:22:29.290Z","updatedAt":"2024-09-17T07:23:22.948Z","deleted":false,"deletedAt":null,"attributes":[{"docId":41,"key":"share","value":"48VIcsBN5l3"}]}