{"id":38,"title":"MacOS 进程间通信 DistributedNotificationCenter","content":"{\"type\":\"doc\",\"content\":[{\"type\":\"heading\",\"attrs\":{\"level\":2,\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"Why Not XPC?\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"说到 MacOS 上的进程间通信，XPC 是一个跨不过的方案，至于为什么不使用 XPC，这当然要从需求说起。我的需求是，我的主进程已经在运行了，打算实现一个 CLI 程序，期望使用 CLI 程序能够获取或修改主进程的数据。如果用 XPC，XPC 虽然从官方的口径来说是一个轻量的进程间通信方案，但是为了建立起 CLI 到主程序的连接通道，首先要实现 LaunchAgent 或 LaunchDaemon，而且还要自行实现 CLI 和 主程序的连接方法，这一点都不优雅，也不轻量，所以 XPC 最终从我的方案中 PASS 掉了。\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"XPC PASS 之后，我找了下文档，又发现了 DistributedNotificationCenter 这种方式，我觉得这种方式更可称之为轻量且开箱即用。\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"}},{\"type\":\"heading\",\"attrs\":{\"level\":2,\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"使用方式\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"这种的使用方式可以称之为简单\"}]},{\"type\":\"ordered_list\",\"attrs\":{\"order\":1},\"content\":[{\"type\":\"list_item\",\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"在 CLI 进程中发出（post）通知（notification）\"}]}]},{\"type\":\"list_item\",\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"在主进程中接收（addObserver 或 publisher）对应的通知，处理完之后，再发出一个 reply 通知，告知 CLI 进程已处理完毕\"}]}]},{\"type\":\"list_item\",\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"在 CLI 进程中接收 reply 通知，输出 reply 通知中的结果，然后退出 CLI 进程。\"}]}]}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"对于目前的 CLI 进程来说，上面三步就已经足够了。后续如果有复杂的调用过程，可以把从 CLI 进程调用主进程获得返回封装为一个 invoke。\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"}},{\"type\":\"heading\",\"attrs\":{\"level\":2,\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"可能存在的问题\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"首先是来自官方文档的说明，官方文档有说 DistributedNotificationCenter 是比较消耗性能的， 它的实时性无法保证，延迟是没有上限的，甚至在系统队列已满的情况下，会出现消息丢失。\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"},\"content\":[{\"type\":\"text\",\"text\":\"其次就是不是类型安全的，因为任何一个进程都有可能发出对应的通知，所以不能假设通过通知传过来的参数是正确的，要做好参数的校验\"}]},{\"type\":\"paragraph\",\"attrs\":{\"align\":\"left\"}}]}","path":"/1/12","nextId":41,"createdAt":"2024-09-12T11:41:55.363Z","updatedAt":"2024-09-17T07:22:29.305Z","deleted":false,"deletedAt":null,"attributes":[{"docId":38,"key":"share","value":"48VIcsBN5h2"}]}